enum UserRoleEnum {
    USER
    ADMIN
}

enum UserAccountEnum {
    EMAIL
    GOOGLE
    GITHUB
}

type LoginAttempt {
    count: Int!
    lastLogin: Date!
}

type Device {
    deviceId: String!
    deviceType: String!
    ipAddress: String!
    browser: String!
    version: String!
    os: String!
    platform: String!
    lastLogin: Date!
}

type Address {
    street: String!
    city: String!
    state: String!
    postalCode: String!
    country: String!
}

type BillingInfo {
    phoneNumber: String!
    address: Address!
}

type User {
    _id: ID!
    firstName: String!
    lastName: String!
    email: String!
    password: String
    profilePicture: String
    phoneNumber: String
    role: UserRoleEnum!
    account: [UserAccountEnum!]!
    isBlocked: Boolean!
    isVerified: Boolean!
    googleId: String
    githubId: String
    isDeactivated: Boolean!
    deactivateReason: String
    deactivateTime: Date
    devices: [Device!]
    billingInfo: BillingInfo
    latestSubscription: ID
    loginAttempt: LoginAttempt
    createdAt: Date!
    updatedAt: Date!
}

scalar Date

input RegisterInput {
    firstName: String
    lastName: String
    email: String
    password: String
    profilePicture: String
    phoneNumber: String
}

input LoginInput {
    email: String
    password: String
}

input ResetPasswordInput {
    oldPassword: String
    newPassword: String
    confirmPassword: String
}

input SetPasswordInput {
    newPassword: String
    confirmPassword: String
}

input ForgotPasswordInput {
    userId: String
    token: String
    newPassword: String
    confirmPassword: String
}

input UpdateProfileInput {
    firstName: String
    lastName: String
    phoneNumber: String
}

type Query {
    getUser(_id: ID!): User!
}

type Mutation {
    registerUser(user: RegisterInput!): User!
    loginUser(user: LoginInput!): User!
    verifyUser(otp: String!): User!
    resetPassword(data: ResetPasswordInput!): User!
    setPassword(data: SetPasswordInput!): User!
    forgotPassword(data: ForgotPasswordInput!): User!
    updateProfile(data: UpdateProfileInput!): User!
    googleLogin(token: String!): User!
}